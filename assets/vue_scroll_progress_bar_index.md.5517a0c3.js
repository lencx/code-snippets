import{_ as n,c as s,o as a,d as t}from"./app.26afa5f0.js";const p='{"title":"滚动进度条","description":"","frontmatter":{},"headers":[{"level":2,"title":"💠 核心","slug":"💠-核心"},{"level":2,"title":"✍️ 实现","slug":"✍️-实现"},{"level":2,"title":"🔗 参考","slug":"🔗-参考"}],"relativePath":"vue/scroll_progress_bar/index.md","lastUpdated":1632544186517}',o={},e=[t('<h1 id="滚动进度条" tabindex="-1">滚动进度条 <a class="header-anchor" href="#滚动进度条" aria-hidden="true">#</a></h1><p>创建一个进度条，用来指示页面滚动百分比，主要有两点注意事项及一个思考：</p><ul><li>使用 <code>position: fixed</code> 将滚动进度条置于页面顶部，<code>z-index</code> 设置一个较大的值是为了保证元素在页面内容的最上层。</li><li>使用 <code>EventTarget.addEventListener()</code> 和 <code>Element.scrollTop</code> 来确定文档的滚动百分比并将其设置为滚动进度条的宽度。</li><li>思考 - 如果页面容器高度发生变化，会发生什么？</li></ul><h2 id="💠-核心" tabindex="-1">💠 核心 <a class="header-anchor" href="#💠-核心" aria-hidden="true">#</a></h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scroll_progress_bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-css"><pre><code><span class="token selector">#scroll_progress_bar</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>\n  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> #7983ff<span class="token punctuation">;</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 10000<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">const</span> scrollProgress <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;scroll_progress_bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 滚动条高度</span>\n<span class="token keyword">const</span> height <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight <span class="token operator">-</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>\n\nwindow<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> scrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>\n  <span class="token comment">// 当前进度条进度 = 当前滚动条位置 / 滚动条高度</span>\n  scrollProgress<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span>scrollTop <span class="token operator">/</span> height<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="✍️-实现" tabindex="-1">✍️ 实现 <a class="header-anchor" href="#✍️-实现" aria-hidden="true">#</a></h2><p><code>ScrollProgress.vue</code></p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted<span class="token punctuation">,</span> onUnmounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token comment">// 在 `&lt;script setup&gt;` 标签下要使用 `props`，则需要使用 `defineProps` 进行声明</span>\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 滚动容器 - 如果容器高度会发生变化，则需要对其进行监听，否则会滚动进度会出现计算误差</span>\n  root<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 滚动条的高度</span>\n  height<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;4px&#39;</span><span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 滚动条颜色</span>\n  theme<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;#3eaf7c&#39;</span><span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      document<span class="token punctuation">.</span>head<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> v\n      <span class="token keyword">const</span> q <span class="token operator">=</span> document<span class="token punctuation">.</span>head<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color\n      document<span class="token punctuation">.</span>head<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n      <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>q\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 滚动条放置的位置：顶部或底部</span>\n  placement<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bottom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[ScrollProgress(placement)] The value must match one of these strings: &#39;top&#39; | &#39;bottom&#39;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 滚动条在页面中的层级</span>\n  zIndex<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token punctuation">[</span>Number<span class="token punctuation">,</span> String<span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^-?[\\d]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> appHeight <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 为了避免进度条因页面容器高度变化导致计算偏差，需要对页面容器进行监听，动态获取其高度</span>\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 需要观察变动的节点</span>\n  <span class="token keyword">const</span> targetNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>root<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>targetNode<span class="token punctuation">)</span> <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[ScrollProgress(root)] &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>root<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; is invalid</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token comment">// 观察器的配置（需要观察什么变动）</span>\n  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> attributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> childList<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> subtree<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n  <span class="token comment">// 创建一个观察器实例并传入当观察到变动时执行的回调函数</span>\n  <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutationsList<span class="token operator">:</span> MutationRecord<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Use traditional &#39;for loops&#39; for IE 11</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> mutation <span class="token keyword">of</span> mutationsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;attributes&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        appHeight<span class="token punctuation">.</span>value <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// 开始观察目标节点</span>\n  observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>targetNode<span class="token punctuation">,</span> config<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 滚动事件执行的回调函数</span>\n<span class="token keyword">const</span> <span class="token function-variable function">listener</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> scrollProgress <span class="token operator">=</span> el<span class="token punctuation">.</span>value\n  <span class="token keyword">const</span> height <span class="token operator">=</span> appHeight<span class="token punctuation">.</span>value <span class="token operator">-</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight\n  <span class="token keyword">const</span> scrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop\n  scrollProgress<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token punctuation">(</span>scrollTop <span class="token operator">/</span> height<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> style<span class="token operator">:</span> any <span class="token operator">=</span> <span class="token punctuation">{</span>\n  background<span class="token operator">:</span> props<span class="token punctuation">.</span>theme<span class="token punctuation">,</span>\n  zIndex<span class="token operator">:</span> props<span class="token punctuation">.</span>zIndex<span class="token punctuation">,</span>\n  height<span class="token operator">:</span> props<span class="token punctuation">.</span>height<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>placement <span class="token operator">===</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">)</span> style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>placement <span class="token operator">===</span> <span class="token string">&#39;bottom&#39;</span><span class="token punctuation">)</span> style<span class="token punctuation">.</span>bottom <span class="token operator">=</span> <span class="token number">0</span>\n\n<span class="token comment">// 在 `&lt;script setup&gt;` 标签下显式公开属性，则需要使用 `defineExpose`</span>\n<span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span> style <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scroll_progress<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">#scroll_progress</span> <span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>\n  <span class="token property">transition</span><span class="token punctuation">:</span> width 300ms ease-out<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><hr><h2 id="🔗-参考" tabindex="-1">🔗 参考 <a class="header-anchor" href="#🔗-参考" aria-hidden="true">#</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document/scroll_event" target="_blank" rel="noopener noreferrer">[MDN] Document: scroll event</a> - 文档视图或者一个元素在滚动时，会触发元素的scroll事件。</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver" target="_blank" rel="noopener noreferrer">[MDN] MutationObserver</a> - 接口提供了监视对 <code>DOM树</code> 所做更改的能力。它被设计为旧的 <code>Mutation Events</code> 功能的替代品，该功能是 <code>DOM3 Events</code> 规范的一部分。</li><li><a href="https://v3.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue3 API</a><ul><li><a href="https://v3.vuejs.org/api/options-data.html#props" target="_blank" rel="noopener noreferrer">props</a></li><li><a href="https://v3.vuejs.org/api/sfc-script-setup.html#basic-syntax" target="_blank" rel="noopener noreferrer">&lt;script setup&gt;</a></li><li><a href="https://v3.vuejs.org/api/composition-api.html#lifecycle-hooks" target="_blank" rel="noopener noreferrer">Lifecycle Hooks</a></li><li><a href="https://v3.vuejs.org/api/sfc-script-setup.html#defineprops-and-defineemits" target="_blank" rel="noopener noreferrer">defineProps and defineEmits</a></li><li><a href="https://v3.vuejs.org/api/sfc-script-setup.html#defineexpose" target="_blank" rel="noopener noreferrer">defineExpose</a></li></ul></li></ul>',13)];var c=n(o,[["render",function(n,t,p,o,c,l){return a(),s("div",null,e)}]]);export{p as __pageData,c as default};
