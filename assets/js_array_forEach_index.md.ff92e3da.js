import{_ as a,c as n,o as s,d as t}from"./app.26afa5f0.js";const e='{"title":"👉 forEach","description":"","frontmatter":{},"headers":[{"level":2,"title":"💠 语法","slug":"💠-语法"},{"level":2,"title":"⚠️ 注意","slug":"⚠️-注意"},{"level":2,"title":"✍️ 实现","slug":"✍️-实现"},{"level":2,"title":"📌 测试","slug":"📌-测试"},{"level":2,"title":"🔗 参考","slug":"🔗-参考"}],"relativePath":"js/array/forEach/index.md","lastUpdated":1632544186513}',p={},o=[t('<h1 id="👉-foreach" tabindex="-1">👉 forEach <a class="header-anchor" href="#👉-foreach" aria-hidden="true">#</a></h1><blockquote><p>forEach() 方法对数组的每个元素执行一次给定的函数</p></blockquote><h2 id="💠-语法" tabindex="-1">💠 语法 <a class="header-anchor" href="#💠-语法" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>currentValue <span class="token punctuation">[</span><span class="token punctuation">,</span> index <span class="token punctuation">[</span><span class="token punctuation">,</span> array<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li><code>callback</code> - 为数组中每个元素执行的函数，接收一至三个参数： <ul><li><code>currentValue</code> - 数组中当前正在处理的元素</li><li><code>index</code> [可选] - 正在处理的元素在数组中的索引</li><li><code>array</code> [可选] - 调用 forEach 方法的数组本身</li></ul></li><li><code>thisArg</code> [可选] - 当执行回调函数 callback 时，用作 this 的值。</li><li>返回值 - <code>undefined</code></li></ul><h2 id="⚠️-注意" tabindex="-1">⚠️ 注意 <a class="header-anchor" href="#⚠️-注意" aria-hidden="true">#</a></h2><p>除了抛出异常以外，没有办法中止或跳出 forEach() 循环</p><h2 id="✍️-实现" tabindex="-1">✍️ 实现 <a class="header-anchor" href="#✍️-实现" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myEach</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="📌-测试" tabindex="-1">📌 测试 <a class="header-anchor" href="#📌-测试" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span><span class="token function">myEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><hr><h2 id="🔗-参考" tabindex="-1">🔗 参考 <a class="header-anchor" href="#🔗-参考" aria-hidden="true">#</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/NodeList/forEach" target="_blank" rel="noopener noreferrer">[MDN] NodeList.prototype.forEach()</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreferrer">[MDN] Array.prototype.forEach()</a></li></ul>',14)];var c=a(p,[["render",function(a,t,e,p,c,l){return s(),n("div",null,o)}]]);export{e as __pageData,c as default};
