import{_ as n,c as a,o as s,d as t}from"./app.26afa5f0.js";const p='{"title":"👉 filter","description":"","frontmatter":{},"headers":[{"level":2,"title":"💠 语法","slug":"💠-语法"},{"level":2,"title":"✍️ 实现","slug":"✍️-实现"},{"level":2,"title":"📌 测试","slug":"📌-测试"},{"level":2,"title":"🔗 参考","slug":"🔗-参考"}],"relativePath":"js/array/filter/index.md","lastUpdated":1632544186513}',e={},o=[t('<h1 id="👉-filter" tabindex="-1">👉 filter <a class="header-anchor" href="#👉-filter" aria-hidden="true">#</a></h1><blockquote><p>filter() 方法创建一个新数组, 返回符合函数的条件的所有元素。</p></blockquote><h2 id="💠-语法" tabindex="-1">💠 语法 <a class="header-anchor" href="#💠-语法" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">var</span> newArray <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">[</span><span class="token punctuation">,</span> index<span class="token punctuation">[</span><span class="token punctuation">,</span> array<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><ul><li><code>callback</code> - 用来检测数组的每个元素的函数，返回 <code>true</code> 表示该元素通过检测，保留元素，<code>false</code> 则舍弃，接收一至三个参数： <ul><li><code>element</code> - 数组中当前正在处理的元素</li><li><code>index</code> [可选] - 正在处理的元素在数组中的索引</li><li><code>array</code> [可选] - 调用 filter 方法的数组本身</li></ul></li><li><code>thisArg</code> [可选] - 当执行回调函数 callback 时，用作 this 的值</li><li>返回值 - 一个新的、由通过检测的元素组成的数组，如果没有任何数组元素通过检测，则返回空数组。</li></ul><h2 id="✍️-实现" tabindex="-1">✍️ 实现 <a class="header-anchor" href="#✍️-实现" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myFilter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="📌-测试" tabindex="-1">📌 测试 <a class="header-anchor" href="#📌-测试" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newVal <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">myFilter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 5]</span>\n</code></pre></div><hr><h2 id="🔗-参考" tabindex="-1">🔗 参考 <a class="header-anchor" href="#🔗-参考" aria-hidden="true">#</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" target="_blank" rel="noopener noreferrer">[MDN] Array.prototype.filter()</a></li></ul>',12)];var c=n(e,[["render",function(n,t,p,e,c,l){return s(),a("div",null,o)}]]);export{p as __pageData,c as default};
